{"version":3,"file":"static/webpack/static/development/pages/property-list.js.84e61156857b18408f2e.hot-update.js","sources":["webpack:///./pages/property-list.js"],"sourcesContent":["import React, { Component } from 'react';\nimport MainLayout from '../layouts/Main';\nimport Properties from '../components/PropertyList/Properties';\nimport PropertyListOptions from '../components/PropertyList/PropertyListOptions';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ListProperty from \"../components/PropertyList/ListProperty\";\nimport Card from 'react-bootstrap/Card';\nimport Paginator from '../components/Paginator';\nimport http from '../services/http.service';\nimport styled from 'styled-components';\nimport {\n    getTotalPages,\n    getDisplayedItems,\n    getIndex\n} from '../services/pagination.helper';\nimport PropertyInfoForm from \"../components/PropertyForms/PropertyInfoForm\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nconst CardWrapper = styled.div`\n        .card{\n            margin-bottom: 15px;\n        }\n    \n        .card-body{\n            padding: 0;\n        }\n        \n        .card-header{\n            display:flex;\n            direction: row;\n            justify-content: space-between\n        }\n        \n        i{\n            color: #548DD4;\n            cursor: pointer\n        }\n        \n        i:hover{\n           color: #0056b3; \n        }\n        \n        .PropertyListActions i{\n            margin-right: 10px\n        }  \n  \n`;\n\nexport default class PropertyList extends Component{\n    static async getInitialProps({query}){\n        try{\n            const res = await http('api/notes');\n            const properties = await res.json();\n            return {properties};\n        }catch(err) {\n            console.log(err)\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            displayTotal: 25,\n            currentPage: 1,\n            displayedProperties: [],\n            totalPages: 1,\n            filterOptionsOpen:false,\n            newPropertyFormOpen: false\n        }\n    }\n\n    componentDidMount() {\n        const pages = getTotalPages(this.props.properties.length, this.state.displayTotal);\n        this.setState(st => {\n            return {\n                loading: false,\n                displayedProperties: this.props.properties.slice(0, 25),\n                totalPages: pages\n            }\n        });\n    }\n\n    updateDisplayedProperties = (page) => {\n        const index = getIndex(page, this.state.displayTotal);\n        const dispProps = getDisplayedItems(index, this.props.properties, this.state.displayTotal);\n        this.setState({\n            displayedProperties: dispProps,\n            currentPage: page\n        })\n    };\n\n    updateDisplayTotal = total => {\n        const pages = getTotalPages(this.props.properties.length, this.state.displayTotal);\n        this.setState(st => {\n            return {\n                displayTotal: parseInt(total),\n                displayedProperties: getDisplayedItems(\n                    getIndex(this.state.currentPage, this.state.displayTotal),\n                    this.props.properties,\n                    this.state.displayTotal\n                ),\n                totalPages: pages\n            }\n        });\n    };\n\n    openFilterOptions = () => {\n      this.setState({\n          filterOptionsOpen: !this.state.filterOptionsOpen,\n          newPropertyFormOpen: false\n      })\n    };\n\n    openNewPropertyForm = () => {\n        this.setState({\n            filterOptionsOpen: false,\n            newPropertyFormOpen: !this.state.newPropertyFormOpen\n        })\n    };\n\n    render() {\n        const {\n            displayedProperties,\n            loading,\n            totalPages,\n            displayTotal,\n            currentPage,\n            filterOptionsOpen,\n            newPropertyFormOpen\n        } = this.state;\n\n        const properties = displayedProperties.map(property => (\n            <ListProperty {...property} key={property.id}/>\n        ));\n\n        const content = loading ?\n            <LoadingSpinner /> :\n            <Card>\n                <Card.Header>\n                    Properties\n                    <div className=\"PropertyListActions\">\n                        <i className=\"fas fa-filter\" onClick={this.openFilterOptions}/>\n                        <i className=\"fas fa-plus\" onClick={this.openNewPropertyForm}/>\n                    </div>\n\n                </Card.Header>\n                <Card.Body>\n                    <div>\n                        {filterOptionsOpen &&\n                            <PropertyListOptions />\n                        }\n                        {newPropertyFormOpen &&\n                            <div className=\"PropertyListForm\">\n                                <Row>\n                                    <Col>\n                                        <PropertyInfoForm />\n                                    </Col>\n                                </Row>\n                            </div>\n                        }\n                    </div>\n                    <Properties properties={properties}>{properties}</Properties>\n                    <Paginator\n                        pages={totalPages}\n                        displayTotal={displayTotal}\n                        activePage={currentPage}\n                        updateDisplayTotal={this.updateDisplayTotal}\n                        updatePropList={this.updateDisplayedProperties}\n                    />\n                </Card.Body>\n            </Card>;\n\n        return (\n            <MainLayout user={this.props.user}>\n                <CardWrapper>\n                    {content}\n                </CardWrapper>\n            </MainLayout>\n        )\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AA8BA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAyBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAhCA;AAkCA;AACA;AACA;AACA;AACA;AAKA;AAPA;AASA;AACA;AACA;AA/CA;AAiDA;AACA;AACA;AAFA;AAIA;AACA;AAtDA;AAwDA;AACA;AACA;AAFA;AAIA;AACA;AA3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAurIA;;;;A","sourceRoot":""}